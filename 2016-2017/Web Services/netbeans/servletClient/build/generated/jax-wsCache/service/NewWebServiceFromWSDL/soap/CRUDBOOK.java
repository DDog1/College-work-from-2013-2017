
package soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CRUD_BOOK", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CRUDBOOK {


    /**
     * 
     * @param author
     * @param price
     * @param isbn
     * @param publishDate
     * @param description
     * @param bookName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addBook", targetNamespace = "http://soap/", className = "soap.AddBook")
    @ResponseWrapper(localName = "addBookResponse", targetNamespace = "http://soap/", className = "soap.AddBookResponse")
    @Action(input = "http://soap/CRUD_BOOK/addBookRequest", output = "http://soap/CRUD_BOOK/addBookResponse")
    public String addBook(
        @WebParam(name = "bookName", targetNamespace = "")
        String bookName,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "publishDate", targetNamespace = "")
        String publishDate,
        @WebParam(name = "isbn", targetNamespace = "")
        String isbn,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "price", targetNamespace = "")
        double price);

    /**
     * 
     * @param author
     * @param price
     * @param isbn
     * @param publishDate
     * @param index
     * @param description
     * @param bookName
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateBook", targetNamespace = "http://soap/", className = "soap.UpdateBook")
    @ResponseWrapper(localName = "updateBookResponse", targetNamespace = "http://soap/", className = "soap.UpdateBookResponse")
    @Action(input = "http://soap/CRUD_BOOK/updateBookRequest", output = "http://soap/CRUD_BOOK/updateBookResponse")
    public String updateBook(
        @WebParam(name = "index", targetNamespace = "")
        int index,
        @WebParam(name = "bookName", targetNamespace = "")
        String bookName,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "publishDate", targetNamespace = "")
        String publishDate,
        @WebParam(name = "isbn", targetNamespace = "")
        String isbn,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "price", targetNamespace = "")
        double price);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "displayBook", targetNamespace = "http://soap/", className = "soap.DisplayBook")
    @ResponseWrapper(localName = "displayBookResponse", targetNamespace = "http://soap/", className = "soap.DisplayBookResponse")
    @Action(input = "http://soap/CRUD_BOOK/displayBookRequest", output = "http://soap/CRUD_BOOK/displayBookResponse")
    public List<String> displayBook();

    /**
     * 
     * @param index
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeBook", targetNamespace = "http://soap/", className = "soap.RemoveBook")
    @ResponseWrapper(localName = "removeBookResponse", targetNamespace = "http://soap/", className = "soap.RemoveBookResponse")
    @Action(input = "http://soap/CRUD_BOOK/removeBookRequest", output = "http://soap/CRUD_BOOK/removeBookResponse")
    public String removeBook(
        @WebParam(name = "index", targetNamespace = "")
        int index);

}
